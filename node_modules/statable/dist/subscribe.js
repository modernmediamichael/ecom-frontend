'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _toConsumableArray2 = require('babel-runtime/helpers/toConsumableArray');

var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Subscribe = function (_Component) {
	(0, _inherits3.default)(Subscribe, _Component);

	function Subscribe(props) {
		(0, _classCallCheck3.default)(this, Subscribe);

		var _this = (0, _possibleConstructorReturn3.default)(this, (Subscribe.__proto__ || Object.getPrototypeOf(Subscribe)).call(this, props));

		_this.state = {};
		if (Array.isArray(_this.props.to)) {
			_this.multi = true;
		}
		_this.onChange = _this.onChange.bind(_this);
		return _this;
	}

	(0, _createClass3.default)(Subscribe, [{
		key: 'componentWillMount',
		value: function componentWillMount() {
			var _this2 = this;

			if (!this.multi) {
				return this.props.to.subscribe(this.onChange);
			}
			this.props.to.forEach(function (to) {
				to.subscribe(_this2.onChange);
			});
		}
	}, {
		key: 'componentWillUnmount',
		value: function componentWillUnmount() {
			var _this3 = this;

			if (!this.multi) {
				return this.props.to.unsubscribe(this.onChange);
			}
			this.props.to.forEach(function (to) {
				to.unsubscribe(_this3.onChange);
			});
		}
	}, {
		key: 'onChange',
		value: function onChange() {
			this.setState({ changed: true });
		}
	}, {
		key: 'render',
		value: function render() {
			var _props;

			if (!this.multi) {
				return this.props.children(this.props.to.state);
			}
			return (_props = this.props).children.apply(_props, (0, _toConsumableArray3.default)(this.props.to.map(function (to) {
				return to.state;
			})));
		}
	}]);
	return Subscribe;
}(_react.Component);

exports.default = Subscribe;
module.exports = exports['default'];
//# sourceMappingURL=subscribe.js.map