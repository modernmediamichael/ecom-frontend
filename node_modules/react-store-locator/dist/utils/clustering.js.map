{"version":3,"sources":["../../src/utils/clustering.js"],"names":["createClusters","mapProps","markers","radius","extent","nodeSize","minZoom","maxZoom","bounds","zoom","index","supercluster","points","map","marker","geometry","coordinates","lng","lat","clusters","load","getClusters","sw","ne","cluster","type","id","point_count","properties","cluster_id","getZoom","getClusterExpansionZoom","length"],"mappings":";;;;;;;;;;;AAAA;;;;;;AAEA,IAAMA,iBAAiB,SAAjBA,cAAiB,CACtBC,QADsB,EAEtBC,OAFsB,EAGtBC,MAHsB,EAItBC,MAJsB,EAKtBC,QALsB,EAMtBC,OANsB,EAOtBC,OAPsB,EAQlB;AAAA,KACIC,MADJ,GACqBP,QADrB,CACIO,MADJ;AAAA,KACYC,IADZ,GACqBR,QADrB,CACYQ,IADZ;;AAEJ,KAAMC,QAAQ,IAAIC,sBAAJ,CAAiB;AAC9BR,UAAQA,UAAU,EADY;AAE9BC,UAAQA,UAAU,GAFY;AAG9BC,YAAUA,YAAY,EAHQ;AAI9BC,WAASA,WAAW,CAJU;AAK9BC,WAASA,WAAW;AACpB;AAN8B,EAAjB,CAAd;AAQA,KAAMK,SAASV,QAAQW,GAAR,CAAY,kBAAU;AACpC,oCACIC,MADJ;AAECC,aAAU,EAAEC,aAAa,CAACF,OAAOG,GAAR,EAAaH,OAAOI,GAApB,CAAf;AAFX;AAIA,EALc,CAAf;AAMA;AACA;AACA;AACA,KAAMC,WAAWT,MACfU,IADe,CACVR,MADU,EAEfS,WAFe,CAGf,CAACb,OAAOc,EAAP,CAAUL,GAAX,EAAgBT,OAAOc,EAAP,CAAUJ,GAA1B,EAA+BV,OAAOe,EAAP,CAAUN,GAAzC,EAA8CT,OAAOe,EAAP,CAAUL,GAAxD,CAHe,EAIfT,IAJe,EAMfI,GANe,CAMX;AAAA,SACJW,QAAQC,IAAR,KAAiB,SAAjB,GACG;AACAC,OAAIF,QAAQE,EADZ;AAEAR,QAAKM,QAAQT,QAAR,CAAiBC,WAAjB,CAA6B,CAA7B,CAFL;AAGAC,QAAKO,QAAQT,QAAR,CAAiBC,WAAjB,CAA6B,CAA7B,CAHL;AAIAW,gBAAaH,QAAQI,UAAR,CAAmBD,WAJhC;AAKAE,eAAYL,QAAQI,UAAR,CAAmBC,UAL/B;AAMA;AACAC,YAAS;AAAA,WACRpB,MAAMqB,uBAAN,CAA8BP,QAAQI,UAAR,CAAmBC,UAAjD,CADQ;AAAA;AAPT,GADH,GAWGL,OAZC;AAAA,EANW,CAAjB;;AAqBA,KAAG,CAACL,SAASa,MAAb,EAAqB;AACpB,SAAO9B,OAAP;AACA,EAFD,MAEO;AACN,SAAOiB,QAAP;AACA;AACD,CArDD;;QAuDSnB,c,GAAAA,c","file":"clustering.js","sourcesContent":["import supercluster from 'supercluster'\n\nconst createClusters = (\n\tmapProps,\n\tmarkers,\n\tradius,\n\textent,\n\tnodeSize,\n\tminZoom,\n\tmaxZoom\n) => {\n\tconst { bounds, zoom } = mapProps\n\tconst index = new supercluster({\n\t\tradius: radius || 40,\n\t\textent: extent || 512,\n\t\tnodeSize: nodeSize || 64,\n\t\tminZoom: minZoom || 0,\n\t\tmaxZoom: maxZoom || 16,\n\t\t// log: true,\n\t})\n\tconst points = markers.map(marker => {\n\t\treturn {\n\t\t\t...marker,\n\t\t\tgeometry: { coordinates: [marker.lng, marker.lat] }\n\t\t}\n\t})\n\t// console.log(`POINTS: `, JSON.stringify(points, null , 2))\n\t// console.log(`BOUNDS: `, JSON.stringify(bounds, null, 2))\n\t// console.log(`ZOOM: `, zoom)\n\tconst clusters = index\n\t\t.load(points)\n\t\t.getClusters(\n\t\t\t[bounds.sw.lng, bounds.sw.lat, bounds.ne.lng, bounds.ne.lat],\n\t\t\tzoom\n\t\t)\n\t\t.map(cluster =>\n\t\t\tcluster.type === 'Feature'\n\t\t\t\t? {\n\t\t\t\t\t\tid: cluster.id,\n\t\t\t\t\t\tlat: cluster.geometry.coordinates[1],\n\t\t\t\t\t\tlng: cluster.geometry.coordinates[0],\n\t\t\t\t\t\tpoint_count: cluster.properties.point_count,\n\t\t\t\t\t\tcluster_id: cluster.properties.cluster_id,\n\t\t\t\t\t\t// onclick to get correct zoom\n\t\t\t\t\t\tgetZoom: () =>\n\t\t\t\t\t\t\tindex.getClusterExpansionZoom(cluster.properties.cluster_id)\n\t\t\t\t  }\n\t\t\t\t: cluster\n\t\t)\n\n\tif(!clusters.length) {\n\t\treturn markers\n\t} else {\n\t\treturn clusters\n\t}\n}\n\nexport { createClusters }\n"]}